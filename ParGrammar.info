-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGrammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Block -> '{' ListStmt '}'                          (5)
	ListStmt ->                                        (6)
	ListStmt -> Stmt ListStmt                          (7)
	Stmt -> Type Ident '(' ListArg ')' Block           (8)
	Stmt -> ';'                                        (9)
	Stmt -> Block                                      (10)
	Stmt -> Type ListItem ';'                          (11)
	Stmt -> 'const' Type ListItem ';'                  (12)
	Stmt -> Ident ListBracketE '=' Expr ';'            (13)
	Stmt -> Ident '++' ';'                             (14)
	Stmt -> Ident '--' ';'                             (15)
	Stmt -> Ident '*=' Expr ';'                        (16)
	Stmt -> Ident '-=' Expr ';'                        (17)
	Stmt -> Ident '+=' Expr ';'                        (18)
	Stmt -> Ident '//=' Expr ';'                       (19)
	Stmt -> Ident '%=' Expr ';'                        (20)
	Stmt -> 'return' Expr ';'                          (21)
	Stmt -> 'return' ';'                               (22)
	Stmt -> 'if' '(' Expr ')' Block                    (23)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (24)
	Stmt -> 'while' '(' Expr ')' Block                 (25)
	Stmt -> 'for' '(' Arg ':' Expr ')' Block           (26)
	Stmt -> 'break' ';'                                (27)
	Stmt -> 'continue' ';'                             (28)
	Stmt -> 'print' '(' ListExpr ')' ';'               (29)
	Stmt -> Ident '(' ListExpr ')' ';'                 (30)
	Stmt -> Ident '(' ')' ';'                          (31)
	Stmt -> 'tuple' TupleIdent '=' Expr                (32)
	Arg -> Type Ident                                  (33)
	Arg -> 'const' Type Ident                          (34)
	ListArg ->                                         (35)
	ListArg -> Arg                                     (36)
	ListArg -> Arg ',' ListArg                         (37)
	Item -> Ident                                      (38)
	Item -> Ident '=' Expr                             (39)
	ListItem -> Item                                   (40)
	ListItem -> Item ',' ListItem                      (41)
	BracketE -> '[' Expr ']'                           (42)
	ListBracketE ->                                    (43)
	ListBracketE -> BracketE ListBracketE              (44)
	TupleItem -> Ident                                 (45)
	TupleItem -> '_'                                   (46)
	TupleItem -> TupleIdent                            (47)
	TupleIdent -> '(' TupleItem ',' ListTupleItem ')'   (48)
	ListTupleItem -> TupleItem                         (49)
	ListTupleItem -> TupleItem ',' ListTupleItem       (50)
	Type -> 'int'                                      (51)
	Type -> 'string'                                   (52)
	Type -> 'bool'                                     (53)
	Type -> 'none'                                     (54)
	Type -> Type '[]'                                  (55)
	Type -> '<<' ListType '>>'                         (56)
	ListType -> Type                                   (57)
	ListType -> Type ',' ListType                      (58)
	Expr7 -> 'len' '(' Expr ')'                        (59)
	Expr7 -> 'None'                                    (60)
	Expr7 -> ExprList                                  (61)
	Expr7 -> Expr7 '[' Expr ']'                        (62)
	Expr7 -> Ident '(' ListExpr ')'                    (63)
	Expr7 -> Ident '(' ')'                             (64)
	Expr7 -> '(' Expr ',' ListExpr ')'                 (65)
	Expr7 -> Ident                                     (66)
	Expr7 -> Integer                                   (67)
	Expr7 -> 'True'                                    (68)
	Expr7 -> 'False'                                   (69)
	Expr7 -> String                                    (70)
	Expr7 -> Expr8                                     (71)
	ExprList -> 'new' '(' Type ',' ListExpr ')'        (72)
	ExprList -> '[' ListExpr ']'                       (73)
	ExprList -> '[' Expr '..' Expr ']'                 (74)
	Expr6 -> '-' Expr7                                 (75)
	Expr6 -> 'not' Expr7                               (76)
	Expr6 -> Expr7                                     (77)
	Expr5 -> Expr5 MulOp Expr6                         (78)
	Expr5 -> Expr6                                     (79)
	Expr4 -> Expr4 AddOp Expr5                         (80)
	Expr4 -> Expr5                                     (81)
	Expr3 -> Expr3 RelOp Expr4                         (82)
	Expr3 -> Expr4                                     (83)
	Expr2 -> Expr2 EqOp Expr3                          (84)
	Expr2 -> Expr3                                     (85)
	Expr1 -> Expr2 'and' Expr1                         (86)
	Expr1 -> Expr2                                     (87)
	Expr -> Expr1 'or' Expr                            (88)
	Expr -> Expr1                                      (89)
	Expr8 -> '(' Expr ')'                              (90)
	ListExpr -> Expr                                   (91)
	ListExpr -> Expr ',' ListExpr                      (92)
	AddOp -> '+'                                       (93)
	AddOp -> '-'                                       (94)
	MulOp -> '*'                                       (95)
	MulOp -> '//'                                      (96)
	MulOp -> '%'                                       (97)
	RelOp -> '<'                                       (98)
	RelOp -> '<='                                      (99)
	RelOp -> '>'                                       (100)
	RelOp -> '>='                                      (101)
	EqOp -> '=='                                       (102)
	EqOp -> '!='                                       (103)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'%='           { PT _ (TS _ 3) }
	'('            { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'*='           { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	'+='           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'-='           { PT _ (TS _ 14) }
	'..'           { PT _ (TS _ 15) }
	'//'           { PT _ (TS _ 16) }
	'//='          { PT _ (TS _ 17) }
	':'            { PT _ (TS _ 18) }
	';'            { PT _ (TS _ 19) }
	'<'            { PT _ (TS _ 20) }
	'<<'           { PT _ (TS _ 21) }
	'<='           { PT _ (TS _ 22) }
	'='            { PT _ (TS _ 23) }
	'=='           { PT _ (TS _ 24) }
	'>'            { PT _ (TS _ 25) }
	'>='           { PT _ (TS _ 26) }
	'>>'           { PT _ (TS _ 27) }
	'False'        { PT _ (TS _ 28) }
	'None'         { PT _ (TS _ 29) }
	'True'         { PT _ (TS _ 30) }
	'['            { PT _ (TS _ 31) }
	'[]'           { PT _ (TS _ 32) }
	']'            { PT _ (TS _ 33) }
	'_'            { PT _ (TS _ 34) }
	'and'          { PT _ (TS _ 35) }
	'bool'         { PT _ (TS _ 36) }
	'break'        { PT _ (TS _ 37) }
	'const'        { PT _ (TS _ 38) }
	'continue'     { PT _ (TS _ 39) }
	'else'         { PT _ (TS _ 40) }
	'for'          { PT _ (TS _ 41) }
	'if'           { PT _ (TS _ 42) }
	'int'          { PT _ (TS _ 43) }
	'len'          { PT _ (TS _ 44) }
	'new'          { PT _ (TS _ 45) }
	'none'         { PT _ (TS _ 46) }
	'not'          { PT _ (TS _ 47) }
	'or'           { PT _ (TS _ 48) }
	'print'        { PT _ (TS _ 49) }
	'return'       { PT _ (TS _ 50) }
	'string'       { PT _ (TS _ 51) }
	'tuple'        { PT _ (TS _ 52) }
	'while'        { PT _ (TS _ 53) }
	'{'            { PT _ (TS _ 54) }
	'}'            { PT _ (TS _ 55) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Block           rule  5
	ListStmt        rules 6, 7
	Stmt            rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
	Arg             rules 33, 34
	ListArg         rules 35, 36, 37
	Item            rules 38, 39
	ListItem        rules 40, 41
	BracketE        rule  42
	ListBracketE    rules 43, 44
	TupleItem       rules 45, 46, 47
	TupleIdent      rule  48
	ListTupleItem   rules 49, 50
	Type            rules 51, 52, 53, 54, 55, 56
	ListType        rules 57, 58
	Expr7           rules 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71
	ExprList        rules 72, 73, 74
	Expr6           rules 75, 76, 77
	Expr5           rules 78, 79
	Expr4           rules 80, 81
	Expr3           rules 82, 83
	Expr2           rules 84, 85
	Expr1           rules 86, 87
	Expr            rules 88, 89
	Expr8           rule  90
	ListExpr        rules 91, 92
	AddOp           rules 93, 94
	MulOp           rules 95, 96, 97
	RelOp           rules 98, 99, 100, 101
	EqOp            rules 102, 103

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	';'            shift, and enter state 9
	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'break'        shift, and enter state 12
	'const'        shift, and enter state 13
	'continue'     shift, and enter state 14
	'for'          shift, and enter state 15
	'if'           shift, and enter state 16
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'print'        shift, and enter state 19
	'return'       shift, and enter state 20
	'string'       shift, and enter state 21
	'tuple'        shift, and enter state 22
	'while'        shift, and enter state 23
	'{'            shift, and enter state 24
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 6

	Ident          goto state 3
	Program        goto state 4
	Block          goto state 5
	ListStmt       goto state 6
	Stmt           goto state 7
	Type           goto state 8

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'%='           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'*='           reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	'+='           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'-='           reduce using rule 1
	'..'           reduce using rule 1
	'//'           reduce using rule 1
	'//='          reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<<'           reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'and'          reduce using rule 1
	'bool'         reduce using rule 1
	'break'        reduce using rule 1
	'const'        reduce using rule 1
	'continue'     reduce using rule 1
	'for'          reduce using rule 1
	'if'           reduce using rule 1
	'int'          reduce using rule 1
	'none'         reduce using rule 1
	'or'           reduce using rule 1
	'print'        reduce using rule 1
	'return'       reduce using rule 1
	'string'       reduce using rule 1
	'tuple'        reduce using rule 1
	'while'        reduce using rule 1
	'{'            reduce using rule 1
	'}'            reduce using rule 1
	L_Ident        reduce using rule 1
	%eof           reduce using rule 1


State 3

	Stmt -> Ident . ListBracketE '=' Expr ';'           (rule 13)
	Stmt -> Ident . '++' ';'                            (rule 14)
	Stmt -> Ident . '--' ';'                            (rule 15)
	Stmt -> Ident . '*=' Expr ';'                       (rule 16)
	Stmt -> Ident . '-=' Expr ';'                       (rule 17)
	Stmt -> Ident . '+=' Expr ';'                       (rule 18)
	Stmt -> Ident . '//=' Expr ';'                      (rule 19)
	Stmt -> Ident . '%=' Expr ';'                       (rule 20)
	Stmt -> Ident . '(' ListExpr ')' ';'                (rule 30)
	Stmt -> Ident . '(' ')' ';'                         (rule 31)

	'%='           shift, and enter state 69
	'('            shift, and enter state 70
	'*='           shift, and enter state 71
	'++'           shift, and enter state 72
	'+='           shift, and enter state 73
	'--'           shift, and enter state 74
	'-='           shift, and enter state 75
	'//='          shift, and enter state 76
	'='            reduce using rule 43
	'['            shift, and enter state 77

	BracketE       goto state 67
	ListBracketE   goto state 68

State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	Stmt -> Block .                                     (rule 10)

	';'            reduce using rule 10
	'<<'           reduce using rule 10
	'bool'         reduce using rule 10
	'break'        reduce using rule 10
	'const'        reduce using rule 10
	'continue'     reduce using rule 10
	'for'          reduce using rule 10
	'if'           reduce using rule 10
	'int'          reduce using rule 10
	'none'         reduce using rule 10
	'print'        reduce using rule 10
	'return'       reduce using rule 10
	'string'       reduce using rule 10
	'tuple'        reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	%eof           reduce using rule 10


State 6

	Program -> ListStmt .                               (rule 4)

	%eof           reduce using rule 4


State 7

	ListStmt -> Stmt . ListStmt                         (rule 7)

	';'            shift, and enter state 9
	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'break'        shift, and enter state 12
	'const'        shift, and enter state 13
	'continue'     shift, and enter state 14
	'for'          shift, and enter state 15
	'if'           shift, and enter state 16
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'print'        shift, and enter state 19
	'return'       shift, and enter state 20
	'string'       shift, and enter state 21
	'tuple'        shift, and enter state 22
	'while'        shift, and enter state 23
	'{'            shift, and enter state 24
	'}'            reduce using rule 6
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 6

	Ident          goto state 3
	Block          goto state 5
	ListStmt       goto state 66
	Stmt           goto state 7
	Type           goto state 8

State 8

	Stmt -> Type . Ident '(' ListArg ')' Block          (rule 8)
	Stmt -> Type . ListItem ';'                         (rule 11)
	Type -> Type . '[]'                                 (rule 55)

	'[]'           shift, and enter state 65
	L_Ident        shift, and enter state 2

	Ident          goto state 62
	Item           goto state 63
	ListItem       goto state 64

State 9

	Stmt -> ';' .                                       (rule 9)

	';'            reduce using rule 9
	'<<'           reduce using rule 9
	'bool'         reduce using rule 9
	'break'        reduce using rule 9
	'const'        reduce using rule 9
	'continue'     reduce using rule 9
	'for'          reduce using rule 9
	'if'           reduce using rule 9
	'int'          reduce using rule 9
	'none'         reduce using rule 9
	'print'        reduce using rule 9
	'return'       reduce using rule 9
	'string'       reduce using rule 9
	'tuple'        reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	%eof           reduce using rule 9


State 10

	Type -> '<<' . ListType '>>'                        (rule 56)

	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'string'       shift, and enter state 21

	Type           goto state 60
	ListType       goto state 61

State 11

	Type -> 'bool' .                                    (rule 53)

	','            reduce using rule 53
	'>>'           reduce using rule 53
	'[]'           reduce using rule 53
	L_Ident        reduce using rule 53


State 12

	Stmt -> 'break' . ';'                               (rule 27)

	';'            shift, and enter state 59


State 13

	Stmt -> 'const' . Type ListItem ';'                 (rule 12)

	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'string'       shift, and enter state 21

	Type           goto state 58

State 14

	Stmt -> 'continue' . ';'                            (rule 28)

	';'            shift, and enter state 57


State 15

	Stmt -> 'for' . '(' Arg ':' Expr ')' Block          (rule 26)

	'('            shift, and enter state 56


State 16

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 23)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 24)

	'('            shift, and enter state 55


State 17

	Type -> 'int' .                                     (rule 51)

	','            reduce using rule 51
	'>>'           reduce using rule 51
	'[]'           reduce using rule 51
	L_Ident        reduce using rule 51


State 18

	Type -> 'none' .                                    (rule 54)

	','            reduce using rule 54
	'>>'           reduce using rule 54
	'[]'           reduce using rule 54
	L_Ident        reduce using rule 54


State 19

	Stmt -> 'print' . '(' ListExpr ')' ';'              (rule 29)

	'('            shift, and enter state 54


State 20

	Stmt -> 'return' . Expr ';'                         (rule 21)
	Stmt -> 'return' . ';'                              (rule 22)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	';'            shift, and enter state 44
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 40
	Expr8          goto state 41

State 21

	Type -> 'string' .                                  (rule 52)

	','            reduce using rule 52
	'>>'           reduce using rule 52
	'[]'           reduce using rule 52
	L_Ident        reduce using rule 52


State 22

	Stmt -> 'tuple' . TupleIdent '=' Expr               (rule 32)

	'('            shift, and enter state 28

	TupleIdent     goto state 27

State 23

	Stmt -> 'while' . '(' Expr ')' Block                (rule 25)

	'('            shift, and enter state 26


State 24

	Block -> '{' . ListStmt '}'                         (rule 5)

	';'            shift, and enter state 9
	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'break'        shift, and enter state 12
	'const'        shift, and enter state 13
	'continue'     shift, and enter state 14
	'for'          shift, and enter state 15
	'if'           shift, and enter state 16
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'print'        shift, and enter state 19
	'return'       shift, and enter state 20
	'string'       shift, and enter state 21
	'tuple'        shift, and enter state 22
	'while'        shift, and enter state 23
	'{'            shift, and enter state 24
	'}'            reduce using rule 6
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Block          goto state 5
	ListStmt       goto state 25
	Stmt           goto state 7
	Type           goto state 8

State 25

	Block -> '{' ListStmt . '}'                         (rule 5)

	'}'            shift, and enter state 137


State 26

	Stmt -> 'while' '(' . Expr ')' Block                (rule 25)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 136
	Expr8          goto state 41

State 27

	Stmt -> 'tuple' TupleIdent . '=' Expr               (rule 32)

	'='            shift, and enter state 135


State 28

	TupleIdent -> '(' . TupleItem ',' ListTupleItem ')'    (rule 48)

	'('            shift, and enter state 28
	'_'            shift, and enter state 134
	L_Ident        shift, and enter state 2

	Ident          goto state 131
	TupleItem      goto state 132
	TupleIdent     goto state 133

State 29

	Expr7 -> Ident . '(' ListExpr ')'                   (rule 63)
	Expr7 -> Ident . '(' ')'                            (rule 64)
	Expr7 -> Ident .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'('            shift, and enter state 130
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'..'           reduce using rule 66
	'//'           reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<<'           reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	'and'          reduce using rule 66
	'bool'         reduce using rule 66
	'break'        reduce using rule 66
	'const'        reduce using rule 66
	'continue'     reduce using rule 66
	'for'          reduce using rule 66
	'if'           reduce using rule 66
	'int'          reduce using rule 66
	'none'         reduce using rule 66
	'or'           reduce using rule 66
	'print'        reduce using rule 66
	'return'       reduce using rule 66
	'string'       reduce using rule 66
	'tuple'        reduce using rule 66
	'while'        reduce using rule 66
	'{'            reduce using rule 66
	'}'            reduce using rule 66
	L_Ident        reduce using rule 66
	%eof           reduce using rule 66


State 30

	Expr7 -> Integer .                                  (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'..'           reduce using rule 67
	'//'           reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<<'           reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	'and'          reduce using rule 67
	'bool'         reduce using rule 67
	'break'        reduce using rule 67
	'const'        reduce using rule 67
	'continue'     reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'int'          reduce using rule 67
	'none'         reduce using rule 67
	'or'           reduce using rule 67
	'print'        reduce using rule 67
	'return'       reduce using rule 67
	'string'       reduce using rule 67
	'tuple'        reduce using rule 67
	'while'        reduce using rule 67
	'{'            reduce using rule 67
	'}'            reduce using rule 67
	L_Ident        reduce using rule 67
	%eof           reduce using rule 67


State 31

	Expr7 -> String .                                   (rule 70)

	'!='           reduce using rule 70
	'%'            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'..'           reduce using rule 70
	'//'           reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<<'           reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'['            reduce using rule 70
	']'            reduce using rule 70
	'and'          reduce using rule 70
	'bool'         reduce using rule 70
	'break'        reduce using rule 70
	'const'        reduce using rule 70
	'continue'     reduce using rule 70
	'for'          reduce using rule 70
	'if'           reduce using rule 70
	'int'          reduce using rule 70
	'none'         reduce using rule 70
	'or'           reduce using rule 70
	'print'        reduce using rule 70
	'return'       reduce using rule 70
	'string'       reduce using rule 70
	'tuple'        reduce using rule 70
	'while'        reduce using rule 70
	'{'            reduce using rule 70
	'}'            reduce using rule 70
	L_Ident        reduce using rule 70
	%eof           reduce using rule 70


State 32

	Expr7 -> Expr7 . '[' Expr ']'                       (rule 62)
	Expr6 -> Expr7 .                                    (rule 77)

	'!='           reduce using rule 77
	'%'            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'..'           reduce using rule 77
	'//'           reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<<'           reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'['            shift, and enter state 129
	']'            reduce using rule 77
	'and'          reduce using rule 77
	'bool'         reduce using rule 77
	'break'        reduce using rule 77
	'const'        reduce using rule 77
	'continue'     reduce using rule 77
	'for'          reduce using rule 77
	'if'           reduce using rule 77
	'int'          reduce using rule 77
	'none'         reduce using rule 77
	'or'           reduce using rule 77
	'print'        reduce using rule 77
	'return'       reduce using rule 77
	'string'       reduce using rule 77
	'tuple'        reduce using rule 77
	'while'        reduce using rule 77
	'{'            reduce using rule 77
	'}'            reduce using rule 77
	L_Ident        reduce using rule 77
	%eof           reduce using rule 77


State 33

	Expr7 -> ExprList .                                 (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'..'           reduce using rule 61
	'//'           reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<<'           reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'and'          reduce using rule 61
	'bool'         reduce using rule 61
	'break'        reduce using rule 61
	'const'        reduce using rule 61
	'continue'     reduce using rule 61
	'for'          reduce using rule 61
	'if'           reduce using rule 61
	'int'          reduce using rule 61
	'none'         reduce using rule 61
	'or'           reduce using rule 61
	'print'        reduce using rule 61
	'return'       reduce using rule 61
	'string'       reduce using rule 61
	'tuple'        reduce using rule 61
	'while'        reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61
	L_Ident        reduce using rule 61
	%eof           reduce using rule 61


State 34

	Expr5 -> Expr6 .                                    (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'..'           reduce using rule 79
	'//'           reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<<'           reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	']'            reduce using rule 79
	'and'          reduce using rule 79
	'bool'         reduce using rule 79
	'break'        reduce using rule 79
	'const'        reduce using rule 79
	'continue'     reduce using rule 79
	'for'          reduce using rule 79
	'if'           reduce using rule 79
	'int'          reduce using rule 79
	'none'         reduce using rule 79
	'or'           reduce using rule 79
	'print'        reduce using rule 79
	'return'       reduce using rule 79
	'string'       reduce using rule 79
	'tuple'        reduce using rule 79
	'while'        reduce using rule 79
	'{'            reduce using rule 79
	'}'            reduce using rule 79
	L_Ident        reduce using rule 79
	%eof           reduce using rule 79


State 35

	Expr5 -> Expr5 . MulOp Expr6                        (rule 78)
	Expr4 -> Expr5 .                                    (rule 81)

	'!='           reduce using rule 81
	'%'            shift, and enter state 126
	')'            reduce using rule 81
	'*'            shift, and enter state 127
	'+'            reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'..'           reduce using rule 81
	'//'           shift, and enter state 128
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<<'           reduce using rule 81
	'<='           reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	']'            reduce using rule 81
	'and'          reduce using rule 81
	'bool'         reduce using rule 81
	'break'        reduce using rule 81
	'const'        reduce using rule 81
	'continue'     reduce using rule 81
	'for'          reduce using rule 81
	'if'           reduce using rule 81
	'int'          reduce using rule 81
	'none'         reduce using rule 81
	'or'           reduce using rule 81
	'print'        reduce using rule 81
	'return'       reduce using rule 81
	'string'       reduce using rule 81
	'tuple'        reduce using rule 81
	'while'        reduce using rule 81
	'{'            reduce using rule 81
	'}'            reduce using rule 81
	L_Ident        reduce using rule 81
	%eof           reduce using rule 81

	MulOp          goto state 125

State 36

	Expr4 -> Expr4 . AddOp Expr5                        (rule 80)
	Expr3 -> Expr4 .                                    (rule 83)

	'!='           reduce using rule 83
	')'            reduce using rule 83
	'+'            shift, and enter state 123
	','            reduce using rule 83
	'-'            shift, and enter state 124
	'..'           reduce using rule 83
	';'            reduce using rule 83
	'<'            reduce using rule 83
	'<<'           reduce using rule 83
	'<='           reduce using rule 83
	'=='           reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	']'            reduce using rule 83
	'and'          reduce using rule 83
	'bool'         reduce using rule 83
	'break'        reduce using rule 83
	'const'        reduce using rule 83
	'continue'     reduce using rule 83
	'for'          reduce using rule 83
	'if'           reduce using rule 83
	'int'          reduce using rule 83
	'none'         reduce using rule 83
	'or'           reduce using rule 83
	'print'        reduce using rule 83
	'return'       reduce using rule 83
	'string'       reduce using rule 83
	'tuple'        reduce using rule 83
	'while'        reduce using rule 83
	'{'            reduce using rule 83
	'}'            reduce using rule 83
	L_Ident        reduce using rule 83
	%eof           reduce using rule 83

	AddOp          goto state 122

State 37

	Expr3 -> Expr3 . RelOp Expr4                        (rule 82)
	Expr2 -> Expr3 .                                    (rule 85)

	'!='           reduce using rule 85
	')'            reduce using rule 85
	','            reduce using rule 85
	'..'           reduce using rule 85
	';'            reduce using rule 85
	'<'            shift, and enter state 118
	'<<'           reduce using rule 85
	'<='           shift, and enter state 119
	'=='           reduce using rule 85
	'>'            shift, and enter state 120
	'>='           shift, and enter state 121
	']'            reduce using rule 85
	'and'          reduce using rule 85
	'bool'         reduce using rule 85
	'break'        reduce using rule 85
	'const'        reduce using rule 85
	'continue'     reduce using rule 85
	'for'          reduce using rule 85
	'if'           reduce using rule 85
	'int'          reduce using rule 85
	'none'         reduce using rule 85
	'or'           reduce using rule 85
	'print'        reduce using rule 85
	'return'       reduce using rule 85
	'string'       reduce using rule 85
	'tuple'        reduce using rule 85
	'while'        reduce using rule 85
	'{'            reduce using rule 85
	'}'            reduce using rule 85
	L_Ident        reduce using rule 85
	%eof           reduce using rule 85

	RelOp          goto state 117

State 38

	Expr2 -> Expr2 . EqOp Expr3                         (rule 84)
	Expr1 -> Expr2 . 'and' Expr1                        (rule 86)
	Expr1 -> Expr2 .                                    (rule 87)

	'!='           shift, and enter state 114
	')'            reduce using rule 87
	','            reduce using rule 87
	'..'           reduce using rule 87
	';'            reduce using rule 87
	'<<'           reduce using rule 87
	'=='           shift, and enter state 115
	']'            reduce using rule 87
	'and'          shift, and enter state 116
	'bool'         reduce using rule 87
	'break'        reduce using rule 87
	'const'        reduce using rule 87
	'continue'     reduce using rule 87
	'for'          reduce using rule 87
	'if'           reduce using rule 87
	'int'          reduce using rule 87
	'none'         reduce using rule 87
	'or'           reduce using rule 87
	'print'        reduce using rule 87
	'return'       reduce using rule 87
	'string'       reduce using rule 87
	'tuple'        reduce using rule 87
	'while'        reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_Ident        reduce using rule 87
	%eof           reduce using rule 87

	EqOp           goto state 113

State 39

	Expr -> Expr1 . 'or' Expr                           (rule 88)
	Expr -> Expr1 .                                     (rule 89)

	')'            reduce using rule 89
	','            reduce using rule 89
	'..'           reduce using rule 89
	';'            reduce using rule 89
	'<<'           reduce using rule 89
	']'            reduce using rule 89
	'bool'         reduce using rule 89
	'break'        reduce using rule 89
	'const'        reduce using rule 89
	'continue'     reduce using rule 89
	'for'          reduce using rule 89
	'if'           reduce using rule 89
	'int'          reduce using rule 89
	'none'         reduce using rule 89
	'or'           shift, and enter state 112
	'print'        reduce using rule 89
	'return'       reduce using rule 89
	'string'       reduce using rule 89
	'tuple'        reduce using rule 89
	'while'        reduce using rule 89
	'{'            reduce using rule 89
	'}'            reduce using rule 89
	L_Ident        reduce using rule 89
	%eof           reduce using rule 89


State 40

	Stmt -> 'return' Expr . ';'                         (rule 21)

	';'            shift, and enter state 111


State 41

	Expr7 -> Expr8 .                                    (rule 71)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'..'           reduce using rule 71
	'//'           reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<<'           reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'['            reduce using rule 71
	']'            reduce using rule 71
	'and'          reduce using rule 71
	'bool'         reduce using rule 71
	'break'        reduce using rule 71
	'const'        reduce using rule 71
	'continue'     reduce using rule 71
	'for'          reduce using rule 71
	'if'           reduce using rule 71
	'int'          reduce using rule 71
	'none'         reduce using rule 71
	'or'           reduce using rule 71
	'print'        reduce using rule 71
	'return'       reduce using rule 71
	'string'       reduce using rule 71
	'tuple'        reduce using rule 71
	'while'        reduce using rule 71
	'{'            reduce using rule 71
	'}'            reduce using rule 71
	L_Ident        reduce using rule 71
	%eof           reduce using rule 71


State 42

	Expr7 -> '(' . Expr ',' ListExpr ')'                (rule 65)
	Expr8 -> '(' . Expr ')'                             (rule 90)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 110
	Expr8          goto state 41

State 43

	Expr6 -> '-' . Expr7                                (rule 75)

	'('            shift, and enter state 42
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 109
	ExprList       goto state 33
	Expr8          goto state 41

State 44

	Stmt -> 'return' ';' .                              (rule 22)

	';'            reduce using rule 22
	'<<'           reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'const'        reduce using rule 22
	'continue'     reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'none'         reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'tuple'        reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	%eof           reduce using rule 22


State 45

	Expr7 -> 'False' .                                  (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'..'           reduce using rule 69
	'//'           reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<<'           reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'['            reduce using rule 69
	']'            reduce using rule 69
	'and'          reduce using rule 69
	'bool'         reduce using rule 69
	'break'        reduce using rule 69
	'const'        reduce using rule 69
	'continue'     reduce using rule 69
	'for'          reduce using rule 69
	'if'           reduce using rule 69
	'int'          reduce using rule 69
	'none'         reduce using rule 69
	'or'           reduce using rule 69
	'print'        reduce using rule 69
	'return'       reduce using rule 69
	'string'       reduce using rule 69
	'tuple'        reduce using rule 69
	'while'        reduce using rule 69
	'{'            reduce using rule 69
	'}'            reduce using rule 69
	L_Ident        reduce using rule 69
	%eof           reduce using rule 69


State 46

	Expr7 -> 'None' .                                   (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'..'           reduce using rule 60
	'//'           reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<<'           reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'and'          reduce using rule 60
	'bool'         reduce using rule 60
	'break'        reduce using rule 60
	'const'        reduce using rule 60
	'continue'     reduce using rule 60
	'for'          reduce using rule 60
	'if'           reduce using rule 60
	'int'          reduce using rule 60
	'none'         reduce using rule 60
	'or'           reduce using rule 60
	'print'        reduce using rule 60
	'return'       reduce using rule 60
	'string'       reduce using rule 60
	'tuple'        reduce using rule 60
	'while'        reduce using rule 60
	'{'            reduce using rule 60
	'}'            reduce using rule 60
	L_Ident        reduce using rule 60
	%eof           reduce using rule 60


State 47

	Expr7 -> 'True' .                                   (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'..'           reduce using rule 68
	'//'           reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<<'           reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'['            reduce using rule 68
	']'            reduce using rule 68
	'and'          reduce using rule 68
	'bool'         reduce using rule 68
	'break'        reduce using rule 68
	'const'        reduce using rule 68
	'continue'     reduce using rule 68
	'for'          reduce using rule 68
	'if'           reduce using rule 68
	'int'          reduce using rule 68
	'none'         reduce using rule 68
	'or'           reduce using rule 68
	'print'        reduce using rule 68
	'return'       reduce using rule 68
	'string'       reduce using rule 68
	'tuple'        reduce using rule 68
	'while'        reduce using rule 68
	'{'            reduce using rule 68
	'}'            reduce using rule 68
	L_Ident        reduce using rule 68
	%eof           reduce using rule 68


State 48

	ExprList -> '[' . ListExpr ']'                      (rule 73)
	ExprList -> '[' . Expr '..' Expr ']'                (rule 74)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 107
	Expr8          goto state 41
	ListExpr       goto state 108

State 49

	Expr7 -> 'len' . '(' Expr ')'                       (rule 59)

	'('            shift, and enter state 106


State 50

	ExprList -> 'new' . '(' Type ',' ListExpr ')'       (rule 72)

	'('            shift, and enter state 105


State 51

	Expr6 -> 'not' . Expr7                              (rule 76)

	'('            shift, and enter state 42
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 104
	ExprList       goto state 33
	Expr8          goto state 41

State 52

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'..'           reduce using rule 2
	'//'           reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<<'           reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'and'          reduce using rule 2
	'bool'         reduce using rule 2
	'break'        reduce using rule 2
	'const'        reduce using rule 2
	'continue'     reduce using rule 2
	'for'          reduce using rule 2
	'if'           reduce using rule 2
	'int'          reduce using rule 2
	'none'         reduce using rule 2
	'or'           reduce using rule 2
	'print'        reduce using rule 2
	'return'       reduce using rule 2
	'string'       reduce using rule 2
	'tuple'        reduce using rule 2
	'while'        reduce using rule 2
	'{'            reduce using rule 2
	'}'            reduce using rule 2
	L_Ident        reduce using rule 2
	%eof           reduce using rule 2


State 53

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'..'           reduce using rule 3
	'//'           reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<<'           reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'and'          reduce using rule 3
	'bool'         reduce using rule 3
	'break'        reduce using rule 3
	'const'        reduce using rule 3
	'continue'     reduce using rule 3
	'for'          reduce using rule 3
	'if'           reduce using rule 3
	'int'          reduce using rule 3
	'none'         reduce using rule 3
	'or'           reduce using rule 3
	'print'        reduce using rule 3
	'return'       reduce using rule 3
	'string'       reduce using rule 3
	'tuple'        reduce using rule 3
	'while'        reduce using rule 3
	'{'            reduce using rule 3
	'}'            reduce using rule 3
	L_Ident        reduce using rule 3
	%eof           reduce using rule 3


State 54

	Stmt -> 'print' '(' . ListExpr ')' ';'              (rule 29)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 85
	Expr8          goto state 41
	ListExpr       goto state 103

State 55

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 23)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 24)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 102
	Expr8          goto state 41

State 56

	Stmt -> 'for' '(' . Arg ':' Expr ')' Block          (rule 26)

	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'const'        shift, and enter state 101
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'string'       shift, and enter state 21

	Arg            goto state 99
	Type           goto state 100

State 57

	Stmt -> 'continue' ';' .                            (rule 28)

	';'            reduce using rule 28
	'<<'           reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'const'        reduce using rule 28
	'continue'     reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'none'         reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'tuple'        reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	%eof           reduce using rule 28


State 58

	Stmt -> 'const' Type . ListItem ';'                 (rule 12)
	Type -> Type . '[]'                                 (rule 55)

	'[]'           shift, and enter state 65
	L_Ident        shift, and enter state 2

	Ident          goto state 97
	Item           goto state 63
	ListItem       goto state 98

State 59

	Stmt -> 'break' ';' .                               (rule 27)

	';'            reduce using rule 27
	'<<'           reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'const'        reduce using rule 27
	'continue'     reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'none'         reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'tuple'        reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	%eof           reduce using rule 27


State 60

	Type -> Type . '[]'                                 (rule 55)
	ListType -> Type .                                  (rule 57)
	ListType -> Type . ',' ListType                     (rule 58)

	','            shift, and enter state 96
	'>>'           reduce using rule 57
	'[]'           shift, and enter state 65


State 61

	Type -> '<<' ListType . '>>'                        (rule 56)

	'>>'           shift, and enter state 95


State 62

	Stmt -> Type Ident . '(' ListArg ')' Block          (rule 8)
	Item -> Ident .                                     (rule 38)
	Item -> Ident . '=' Expr                            (rule 39)

	'('            shift, and enter state 93
	','            reduce using rule 38
	';'            reduce using rule 38
	'='            shift, and enter state 94


State 63

	ListItem -> Item .                                  (rule 40)
	ListItem -> Item . ',' ListItem                     (rule 41)

	','            shift, and enter state 92
	';'            reduce using rule 40


State 64

	Stmt -> Type ListItem . ';'                         (rule 11)

	';'            shift, and enter state 91


State 65

	Type -> Type '[]' .                                 (rule 55)

	','            reduce using rule 55
	'>>'           reduce using rule 55
	'[]'           reduce using rule 55
	L_Ident        reduce using rule 55


State 66

	ListStmt -> Stmt ListStmt .                         (rule 7)

	'}'            reduce using rule 7
	%eof           reduce using rule 7


State 67

	ListBracketE -> BracketE . ListBracketE             (rule 44)

	'='            reduce using rule 43
	'['            shift, and enter state 77

	BracketE       goto state 67
	ListBracketE   goto state 90

State 68

	Stmt -> Ident ListBracketE . '=' Expr ';'           (rule 13)

	'='            shift, and enter state 89


State 69

	Stmt -> Ident '%=' . Expr ';'                       (rule 20)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 88
	Expr8          goto state 41

State 70

	Stmt -> Ident '(' . ListExpr ')' ';'                (rule 30)
	Stmt -> Ident '(' . ')' ';'                         (rule 31)

	'('            shift, and enter state 42
	')'            shift, and enter state 87
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 85
	Expr8          goto state 41
	ListExpr       goto state 86

State 71

	Stmt -> Ident '*=' . Expr ';'                       (rule 16)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 84
	Expr8          goto state 41

State 72

	Stmt -> Ident '++' . ';'                            (rule 14)

	';'            shift, and enter state 83


State 73

	Stmt -> Ident '+=' . Expr ';'                       (rule 18)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 82
	Expr8          goto state 41

State 74

	Stmt -> Ident '--' . ';'                            (rule 15)

	';'            shift, and enter state 81


State 75

	Stmt -> Ident '-=' . Expr ';'                       (rule 17)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 80
	Expr8          goto state 41

State 76

	Stmt -> Ident '//=' . Expr ';'                      (rule 19)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 79
	Expr8          goto state 41

State 77

	BracketE -> '[' . Expr ']'                          (rule 42)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 78
	Expr8          goto state 41

State 78

	BracketE -> '[' Expr . ']'                          (rule 42)

	']'            shift, and enter state 176


State 79

	Stmt -> Ident '//=' Expr . ';'                      (rule 19)

	';'            shift, and enter state 175


State 80

	Stmt -> Ident '-=' Expr . ';'                       (rule 17)

	';'            shift, and enter state 174


State 81

	Stmt -> Ident '--' ';' .                            (rule 15)

	';'            reduce using rule 15
	'<<'           reduce using rule 15
	'bool'         reduce using rule 15
	'break'        reduce using rule 15
	'const'        reduce using rule 15
	'continue'     reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'none'         reduce using rule 15
	'print'        reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'tuple'        reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	%eof           reduce using rule 15


State 82

	Stmt -> Ident '+=' Expr . ';'                       (rule 18)

	';'            shift, and enter state 173


State 83

	Stmt -> Ident '++' ';' .                            (rule 14)

	';'            reduce using rule 14
	'<<'           reduce using rule 14
	'bool'         reduce using rule 14
	'break'        reduce using rule 14
	'const'        reduce using rule 14
	'continue'     reduce using rule 14
	'for'          reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'none'         reduce using rule 14
	'print'        reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'tuple'        reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	%eof           reduce using rule 14


State 84

	Stmt -> Ident '*=' Expr . ';'                       (rule 16)

	';'            shift, and enter state 172


State 85

	ListExpr -> Expr .                                  (rule 91)
	ListExpr -> Expr . ',' ListExpr                     (rule 92)

	')'            reduce using rule 91
	','            shift, and enter state 153
	']'            reduce using rule 91


State 86

	Stmt -> Ident '(' ListExpr . ')' ';'                (rule 30)

	')'            shift, and enter state 171


State 87

	Stmt -> Ident '(' ')' . ';'                         (rule 31)

	';'            shift, and enter state 170


State 88

	Stmt -> Ident '%=' Expr . ';'                       (rule 20)

	';'            shift, and enter state 169


State 89

	Stmt -> Ident ListBracketE '=' . Expr ';'           (rule 13)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 168
	Expr8          goto state 41

State 90

	ListBracketE -> BracketE ListBracketE .             (rule 44)

	'='            reduce using rule 44


State 91

	Stmt -> Type ListItem ';' .                         (rule 11)

	';'            reduce using rule 11
	'<<'           reduce using rule 11
	'bool'         reduce using rule 11
	'break'        reduce using rule 11
	'const'        reduce using rule 11
	'continue'     reduce using rule 11
	'for'          reduce using rule 11
	'if'           reduce using rule 11
	'int'          reduce using rule 11
	'none'         reduce using rule 11
	'print'        reduce using rule 11
	'return'       reduce using rule 11
	'string'       reduce using rule 11
	'tuple'        reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11
	%eof           reduce using rule 11


State 92

	ListItem -> Item ',' . ListItem                     (rule 41)

	L_Ident        shift, and enter state 2

	Ident          goto state 97
	Item           goto state 63
	ListItem       goto state 167

State 93

	Stmt -> Type Ident '(' . ListArg ')' Block          (rule 8)

	')'            reduce using rule 35
	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'const'        shift, and enter state 101
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'string'       shift, and enter state 21

	Arg            goto state 165
	ListArg        goto state 166
	Type           goto state 100

State 94

	Item -> Ident '=' . Expr                            (rule 39)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 164
	Expr8          goto state 41

State 95

	Type -> '<<' ListType '>>' .                        (rule 56)

	','            reduce using rule 56
	'>>'           reduce using rule 56
	'[]'           reduce using rule 56
	L_Ident        reduce using rule 56


State 96

	ListType -> Type ',' . ListType                     (rule 58)

	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'string'       shift, and enter state 21

	Type           goto state 60
	ListType       goto state 163

State 97

	Item -> Ident .                                     (rule 38)
	Item -> Ident . '=' Expr                            (rule 39)

	','            reduce using rule 38
	';'            reduce using rule 38
	'='            shift, and enter state 94


State 98

	Stmt -> 'const' Type ListItem . ';'                 (rule 12)

	';'            shift, and enter state 162


State 99

	Stmt -> 'for' '(' Arg . ':' Expr ')' Block          (rule 26)

	':'            shift, and enter state 161


State 100

	Arg -> Type . Ident                                 (rule 33)
	Type -> Type . '[]'                                 (rule 55)

	'[]'           shift, and enter state 65
	L_Ident        shift, and enter state 2

	Ident          goto state 160

State 101

	Arg -> 'const' . Type Ident                         (rule 34)

	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'string'       shift, and enter state 21

	Type           goto state 159

State 102

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 23)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 24)

	')'            shift, and enter state 158


State 103

	Stmt -> 'print' '(' ListExpr . ')' ';'              (rule 29)

	')'            shift, and enter state 157


State 104

	Expr7 -> Expr7 . '[' Expr ']'                       (rule 62)
	Expr6 -> 'not' Expr7 .                              (rule 76)

	'!='           reduce using rule 76
	'%'            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'..'           reduce using rule 76
	'//'           reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<<'           reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'['            shift, and enter state 129
	']'            reduce using rule 76
	'and'          reduce using rule 76
	'bool'         reduce using rule 76
	'break'        reduce using rule 76
	'const'        reduce using rule 76
	'continue'     reduce using rule 76
	'for'          reduce using rule 76
	'if'           reduce using rule 76
	'int'          reduce using rule 76
	'none'         reduce using rule 76
	'or'           reduce using rule 76
	'print'        reduce using rule 76
	'return'       reduce using rule 76
	'string'       reduce using rule 76
	'tuple'        reduce using rule 76
	'while'        reduce using rule 76
	'{'            reduce using rule 76
	'}'            reduce using rule 76
	L_Ident        reduce using rule 76
	%eof           reduce using rule 76


State 105

	ExprList -> 'new' '(' . Type ',' ListExpr ')'       (rule 72)

	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'string'       shift, and enter state 21

	Type           goto state 156

State 106

	Expr7 -> 'len' '(' . Expr ')'                       (rule 59)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 155
	Expr8          goto state 41

State 107

	ExprList -> '[' Expr . '..' Expr ']'                (rule 74)
	ListExpr -> Expr .                                  (rule 91)
	ListExpr -> Expr . ',' ListExpr                     (rule 92)

	','            shift, and enter state 153
	'..'           shift, and enter state 154
	']'            reduce using rule 91


State 108

	ExprList -> '[' ListExpr . ']'                      (rule 73)

	']'            shift, and enter state 152


State 109

	Expr7 -> Expr7 . '[' Expr ']'                       (rule 62)
	Expr6 -> '-' Expr7 .                                (rule 75)

	'!='           reduce using rule 75
	'%'            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'..'           reduce using rule 75
	'//'           reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<<'           reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'['            shift, and enter state 129
	']'            reduce using rule 75
	'and'          reduce using rule 75
	'bool'         reduce using rule 75
	'break'        reduce using rule 75
	'const'        reduce using rule 75
	'continue'     reduce using rule 75
	'for'          reduce using rule 75
	'if'           reduce using rule 75
	'int'          reduce using rule 75
	'none'         reduce using rule 75
	'or'           reduce using rule 75
	'print'        reduce using rule 75
	'return'       reduce using rule 75
	'string'       reduce using rule 75
	'tuple'        reduce using rule 75
	'while'        reduce using rule 75
	'{'            reduce using rule 75
	'}'            reduce using rule 75
	L_Ident        reduce using rule 75
	%eof           reduce using rule 75


State 110

	Expr7 -> '(' Expr . ',' ListExpr ')'                (rule 65)
	Expr8 -> '(' Expr . ')'                             (rule 90)

	')'            shift, and enter state 150
	','            shift, and enter state 151


State 111

	Stmt -> 'return' Expr ';' .                         (rule 21)

	';'            reduce using rule 21
	'<<'           reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'const'        reduce using rule 21
	'continue'     reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'none'         reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'tuple'        reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	%eof           reduce using rule 21


State 112

	Expr -> Expr1 'or' . Expr                           (rule 88)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 149
	Expr8          goto state 41

State 113

	Expr2 -> Expr2 EqOp . Expr3                         (rule 84)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 148
	Expr8          goto state 41

State 114

	EqOp -> '!=' .                                      (rule 103)

	'('            reduce using rule 103
	'-'            reduce using rule 103
	'False'        reduce using rule 103
	'None'         reduce using rule 103
	'True'         reduce using rule 103
	'['            reduce using rule 103
	'len'          reduce using rule 103
	'new'          reduce using rule 103
	'not'          reduce using rule 103
	L_Ident        reduce using rule 103
	L_integ        reduce using rule 103
	L_quoted       reduce using rule 103


State 115

	EqOp -> '==' .                                      (rule 102)

	'('            reduce using rule 102
	'-'            reduce using rule 102
	'False'        reduce using rule 102
	'None'         reduce using rule 102
	'True'         reduce using rule 102
	'['            reduce using rule 102
	'len'          reduce using rule 102
	'new'          reduce using rule 102
	'not'          reduce using rule 102
	L_Ident        reduce using rule 102
	L_integ        reduce using rule 102
	L_quoted       reduce using rule 102


State 116

	Expr1 -> Expr2 'and' . Expr1                        (rule 86)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 147
	Expr8          goto state 41

State 117

	Expr3 -> Expr3 RelOp . Expr4                        (rule 82)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 146
	Expr8          goto state 41

State 118

	RelOp -> '<' .                                      (rule 98)

	'('            reduce using rule 98
	'-'            reduce using rule 98
	'False'        reduce using rule 98
	'None'         reduce using rule 98
	'True'         reduce using rule 98
	'['            reduce using rule 98
	'len'          reduce using rule 98
	'new'          reduce using rule 98
	'not'          reduce using rule 98
	L_Ident        reduce using rule 98
	L_integ        reduce using rule 98
	L_quoted       reduce using rule 98


State 119

	RelOp -> '<=' .                                     (rule 99)

	'('            reduce using rule 99
	'-'            reduce using rule 99
	'False'        reduce using rule 99
	'None'         reduce using rule 99
	'True'         reduce using rule 99
	'['            reduce using rule 99
	'len'          reduce using rule 99
	'new'          reduce using rule 99
	'not'          reduce using rule 99
	L_Ident        reduce using rule 99
	L_integ        reduce using rule 99
	L_quoted       reduce using rule 99


State 120

	RelOp -> '>' .                                      (rule 100)

	'('            reduce using rule 100
	'-'            reduce using rule 100
	'False'        reduce using rule 100
	'None'         reduce using rule 100
	'True'         reduce using rule 100
	'['            reduce using rule 100
	'len'          reduce using rule 100
	'new'          reduce using rule 100
	'not'          reduce using rule 100
	L_Ident        reduce using rule 100
	L_integ        reduce using rule 100
	L_quoted       reduce using rule 100


State 121

	RelOp -> '>=' .                                     (rule 101)

	'('            reduce using rule 101
	'-'            reduce using rule 101
	'False'        reduce using rule 101
	'None'         reduce using rule 101
	'True'         reduce using rule 101
	'['            reduce using rule 101
	'len'          reduce using rule 101
	'new'          reduce using rule 101
	'not'          reduce using rule 101
	L_Ident        reduce using rule 101
	L_integ        reduce using rule 101
	L_quoted       reduce using rule 101


State 122

	Expr4 -> Expr4 AddOp . Expr5                        (rule 80)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 145
	Expr8          goto state 41

State 123

	AddOp -> '+' .                                      (rule 93)

	'('            reduce using rule 93
	'-'            reduce using rule 93
	'False'        reduce using rule 93
	'None'         reduce using rule 93
	'True'         reduce using rule 93
	'['            reduce using rule 93
	'len'          reduce using rule 93
	'new'          reduce using rule 93
	'not'          reduce using rule 93
	L_Ident        reduce using rule 93
	L_integ        reduce using rule 93
	L_quoted       reduce using rule 93


State 124

	AddOp -> '-' .                                      (rule 94)

	'('            reduce using rule 94
	'-'            reduce using rule 94
	'False'        reduce using rule 94
	'None'         reduce using rule 94
	'True'         reduce using rule 94
	'['            reduce using rule 94
	'len'          reduce using rule 94
	'new'          reduce using rule 94
	'not'          reduce using rule 94
	L_Ident        reduce using rule 94
	L_integ        reduce using rule 94
	L_quoted       reduce using rule 94


State 125

	Expr5 -> Expr5 MulOp . Expr6                        (rule 78)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 144
	Expr8          goto state 41

State 126

	MulOp -> '%' .                                      (rule 97)

	'('            reduce using rule 97
	'-'            reduce using rule 97
	'False'        reduce using rule 97
	'None'         reduce using rule 97
	'True'         reduce using rule 97
	'['            reduce using rule 97
	'len'          reduce using rule 97
	'new'          reduce using rule 97
	'not'          reduce using rule 97
	L_Ident        reduce using rule 97
	L_integ        reduce using rule 97
	L_quoted       reduce using rule 97


State 127

	MulOp -> '*' .                                      (rule 95)

	'('            reduce using rule 95
	'-'            reduce using rule 95
	'False'        reduce using rule 95
	'None'         reduce using rule 95
	'True'         reduce using rule 95
	'['            reduce using rule 95
	'len'          reduce using rule 95
	'new'          reduce using rule 95
	'not'          reduce using rule 95
	L_Ident        reduce using rule 95
	L_integ        reduce using rule 95
	L_quoted       reduce using rule 95


State 128

	MulOp -> '//' .                                     (rule 96)

	'('            reduce using rule 96
	'-'            reduce using rule 96
	'False'        reduce using rule 96
	'None'         reduce using rule 96
	'True'         reduce using rule 96
	'['            reduce using rule 96
	'len'          reduce using rule 96
	'new'          reduce using rule 96
	'not'          reduce using rule 96
	L_Ident        reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96


State 129

	Expr7 -> Expr7 '[' . Expr ']'                       (rule 62)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 143
	Expr8          goto state 41

State 130

	Expr7 -> Ident '(' . ListExpr ')'                   (rule 63)
	Expr7 -> Ident '(' . ')'                            (rule 64)

	'('            shift, and enter state 42
	')'            shift, and enter state 142
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 85
	Expr8          goto state 41
	ListExpr       goto state 141

State 131

	TupleItem -> Ident .                                (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45


State 132

	TupleIdent -> '(' TupleItem . ',' ListTupleItem ')'    (rule 48)

	','            shift, and enter state 140


State 133

	TupleItem -> TupleIdent .                           (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47


State 134

	TupleItem -> '_' .                                  (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46


State 135

	Stmt -> 'tuple' TupleIdent '=' . Expr               (rule 32)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 139
	Expr8          goto state 41

State 136

	Stmt -> 'while' '(' Expr . ')' Block                (rule 25)

	')'            shift, and enter state 138


State 137

	Block -> '{' ListStmt '}' .                         (rule 5)

	';'            reduce using rule 5
	'<<'           reduce using rule 5
	'bool'         reduce using rule 5
	'break'        reduce using rule 5
	'const'        reduce using rule 5
	'continue'     reduce using rule 5
	'else'         reduce using rule 5
	'for'          reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'none'         reduce using rule 5
	'print'        reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'tuple'        reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 138

	Stmt -> 'while' '(' Expr ')' . Block                (rule 25)

	'{'            shift, and enter state 24

	Block          goto state 194

State 139

	Stmt -> 'tuple' TupleIdent '=' Expr .               (rule 32)

	';'            reduce using rule 32
	'<<'           reduce using rule 32
	'bool'         reduce using rule 32
	'break'        reduce using rule 32
	'const'        reduce using rule 32
	'continue'     reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'none'         reduce using rule 32
	'print'        reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'tuple'        reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	%eof           reduce using rule 32


State 140

	TupleIdent -> '(' TupleItem ',' . ListTupleItem ')'    (rule 48)

	'('            shift, and enter state 28
	'_'            shift, and enter state 134
	L_Ident        shift, and enter state 2

	Ident          goto state 131
	TupleItem      goto state 192
	TupleIdent     goto state 133
	ListTupleItem  goto state 193

State 141

	Expr7 -> Ident '(' ListExpr . ')'                   (rule 63)

	')'            shift, and enter state 191


State 142

	Expr7 -> Ident '(' ')' .                            (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'..'           reduce using rule 64
	'//'           reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<<'           reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	'and'          reduce using rule 64
	'bool'         reduce using rule 64
	'break'        reduce using rule 64
	'const'        reduce using rule 64
	'continue'     reduce using rule 64
	'for'          reduce using rule 64
	'if'           reduce using rule 64
	'int'          reduce using rule 64
	'none'         reduce using rule 64
	'or'           reduce using rule 64
	'print'        reduce using rule 64
	'return'       reduce using rule 64
	'string'       reduce using rule 64
	'tuple'        reduce using rule 64
	'while'        reduce using rule 64
	'{'            reduce using rule 64
	'}'            reduce using rule 64
	L_Ident        reduce using rule 64
	%eof           reduce using rule 64


State 143

	Expr7 -> Expr7 '[' Expr . ']'                       (rule 62)

	']'            shift, and enter state 190


State 144

	Expr5 -> Expr5 MulOp Expr6 .                        (rule 78)

	'!='           reduce using rule 78
	'%'            reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'..'           reduce using rule 78
	'//'           reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<<'           reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	']'            reduce using rule 78
	'and'          reduce using rule 78
	'bool'         reduce using rule 78
	'break'        reduce using rule 78
	'const'        reduce using rule 78
	'continue'     reduce using rule 78
	'for'          reduce using rule 78
	'if'           reduce using rule 78
	'int'          reduce using rule 78
	'none'         reduce using rule 78
	'or'           reduce using rule 78
	'print'        reduce using rule 78
	'return'       reduce using rule 78
	'string'       reduce using rule 78
	'tuple'        reduce using rule 78
	'while'        reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78
	L_Ident        reduce using rule 78
	%eof           reduce using rule 78


State 145

	Expr5 -> Expr5 . MulOp Expr6                        (rule 78)
	Expr4 -> Expr4 AddOp Expr5 .                        (rule 80)

	'!='           reduce using rule 80
	'%'            shift, and enter state 126
	')'            reduce using rule 80
	'*'            shift, and enter state 127
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'..'           reduce using rule 80
	'//'           shift, and enter state 128
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<<'           reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	']'            reduce using rule 80
	'and'          reduce using rule 80
	'bool'         reduce using rule 80
	'break'        reduce using rule 80
	'const'        reduce using rule 80
	'continue'     reduce using rule 80
	'for'          reduce using rule 80
	'if'           reduce using rule 80
	'int'          reduce using rule 80
	'none'         reduce using rule 80
	'or'           reduce using rule 80
	'print'        reduce using rule 80
	'return'       reduce using rule 80
	'string'       reduce using rule 80
	'tuple'        reduce using rule 80
	'while'        reduce using rule 80
	'{'            reduce using rule 80
	'}'            reduce using rule 80
	L_Ident        reduce using rule 80
	%eof           reduce using rule 80

	MulOp          goto state 125

State 146

	Expr4 -> Expr4 . AddOp Expr5                        (rule 80)
	Expr3 -> Expr3 RelOp Expr4 .                        (rule 82)

	'!='           reduce using rule 82
	')'            reduce using rule 82
	'+'            shift, and enter state 123
	','            reduce using rule 82
	'-'            shift, and enter state 124
	'..'           reduce using rule 82
	';'            reduce using rule 82
	'<'            reduce using rule 82
	'<<'           reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	']'            reduce using rule 82
	'and'          reduce using rule 82
	'bool'         reduce using rule 82
	'break'        reduce using rule 82
	'const'        reduce using rule 82
	'continue'     reduce using rule 82
	'for'          reduce using rule 82
	'if'           reduce using rule 82
	'int'          reduce using rule 82
	'none'         reduce using rule 82
	'or'           reduce using rule 82
	'print'        reduce using rule 82
	'return'       reduce using rule 82
	'string'       reduce using rule 82
	'tuple'        reduce using rule 82
	'while'        reduce using rule 82
	'{'            reduce using rule 82
	'}'            reduce using rule 82
	L_Ident        reduce using rule 82
	%eof           reduce using rule 82

	AddOp          goto state 122

State 147

	Expr1 -> Expr2 'and' Expr1 .                        (rule 86)

	')'            reduce using rule 86
	','            reduce using rule 86
	'..'           reduce using rule 86
	';'            reduce using rule 86
	'<<'           reduce using rule 86
	']'            reduce using rule 86
	'bool'         reduce using rule 86
	'break'        reduce using rule 86
	'const'        reduce using rule 86
	'continue'     reduce using rule 86
	'for'          reduce using rule 86
	'if'           reduce using rule 86
	'int'          reduce using rule 86
	'none'         reduce using rule 86
	'or'           reduce using rule 86
	'print'        reduce using rule 86
	'return'       reduce using rule 86
	'string'       reduce using rule 86
	'tuple'        reduce using rule 86
	'while'        reduce using rule 86
	'{'            reduce using rule 86
	'}'            reduce using rule 86
	L_Ident        reduce using rule 86
	%eof           reduce using rule 86


State 148

	Expr3 -> Expr3 . RelOp Expr4                        (rule 82)
	Expr2 -> Expr2 EqOp Expr3 .                         (rule 84)

	'!='           reduce using rule 84
	')'            reduce using rule 84
	','            reduce using rule 84
	'..'           reduce using rule 84
	';'            reduce using rule 84
	'<'            shift, and enter state 118
	'<<'           reduce using rule 84
	'<='           shift, and enter state 119
	'=='           reduce using rule 84
	'>'            shift, and enter state 120
	'>='           shift, and enter state 121
	']'            reduce using rule 84
	'and'          reduce using rule 84
	'bool'         reduce using rule 84
	'break'        reduce using rule 84
	'const'        reduce using rule 84
	'continue'     reduce using rule 84
	'for'          reduce using rule 84
	'if'           reduce using rule 84
	'int'          reduce using rule 84
	'none'         reduce using rule 84
	'or'           reduce using rule 84
	'print'        reduce using rule 84
	'return'       reduce using rule 84
	'string'       reduce using rule 84
	'tuple'        reduce using rule 84
	'while'        reduce using rule 84
	'{'            reduce using rule 84
	'}'            reduce using rule 84
	L_Ident        reduce using rule 84
	%eof           reduce using rule 84

	RelOp          goto state 117

State 149

	Expr -> Expr1 'or' Expr .                           (rule 88)

	')'            reduce using rule 88
	','            reduce using rule 88
	'..'           reduce using rule 88
	';'            reduce using rule 88
	'<<'           reduce using rule 88
	']'            reduce using rule 88
	'bool'         reduce using rule 88
	'break'        reduce using rule 88
	'const'        reduce using rule 88
	'continue'     reduce using rule 88
	'for'          reduce using rule 88
	'if'           reduce using rule 88
	'int'          reduce using rule 88
	'none'         reduce using rule 88
	'print'        reduce using rule 88
	'return'       reduce using rule 88
	'string'       reduce using rule 88
	'tuple'        reduce using rule 88
	'while'        reduce using rule 88
	'{'            reduce using rule 88
	'}'            reduce using rule 88
	L_Ident        reduce using rule 88
	%eof           reduce using rule 88


State 150

	Expr8 -> '(' Expr ')' .                             (rule 90)

	'!='           reduce using rule 90
	'%'            reduce using rule 90
	')'            reduce using rule 90
	'*'            reduce using rule 90
	'+'            reduce using rule 90
	','            reduce using rule 90
	'-'            reduce using rule 90
	'..'           reduce using rule 90
	'//'           reduce using rule 90
	';'            reduce using rule 90
	'<'            reduce using rule 90
	'<<'           reduce using rule 90
	'<='           reduce using rule 90
	'=='           reduce using rule 90
	'>'            reduce using rule 90
	'>='           reduce using rule 90
	'['            reduce using rule 90
	']'            reduce using rule 90
	'and'          reduce using rule 90
	'bool'         reduce using rule 90
	'break'        reduce using rule 90
	'const'        reduce using rule 90
	'continue'     reduce using rule 90
	'for'          reduce using rule 90
	'if'           reduce using rule 90
	'int'          reduce using rule 90
	'none'         reduce using rule 90
	'or'           reduce using rule 90
	'print'        reduce using rule 90
	'return'       reduce using rule 90
	'string'       reduce using rule 90
	'tuple'        reduce using rule 90
	'while'        reduce using rule 90
	'{'            reduce using rule 90
	'}'            reduce using rule 90
	L_Ident        reduce using rule 90
	%eof           reduce using rule 90


State 151

	Expr7 -> '(' Expr ',' . ListExpr ')'                (rule 65)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 85
	Expr8          goto state 41
	ListExpr       goto state 189

State 152

	ExprList -> '[' ListExpr ']' .                      (rule 73)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'..'           reduce using rule 73
	'//'           reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<<'           reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'['            reduce using rule 73
	']'            reduce using rule 73
	'and'          reduce using rule 73
	'bool'         reduce using rule 73
	'break'        reduce using rule 73
	'const'        reduce using rule 73
	'continue'     reduce using rule 73
	'for'          reduce using rule 73
	'if'           reduce using rule 73
	'int'          reduce using rule 73
	'none'         reduce using rule 73
	'or'           reduce using rule 73
	'print'        reduce using rule 73
	'return'       reduce using rule 73
	'string'       reduce using rule 73
	'tuple'        reduce using rule 73
	'while'        reduce using rule 73
	'{'            reduce using rule 73
	'}'            reduce using rule 73
	L_Ident        reduce using rule 73
	%eof           reduce using rule 73


State 153

	ListExpr -> Expr ',' . ListExpr                     (rule 92)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 85
	Expr8          goto state 41
	ListExpr       goto state 188

State 154

	ExprList -> '[' Expr '..' . Expr ']'                (rule 74)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 187
	Expr8          goto state 41

State 155

	Expr7 -> 'len' '(' Expr . ')'                       (rule 59)

	')'            shift, and enter state 186


State 156

	Type -> Type . '[]'                                 (rule 55)
	ExprList -> 'new' '(' Type . ',' ListExpr ')'       (rule 72)

	','            shift, and enter state 185
	'[]'           shift, and enter state 65


State 157

	Stmt -> 'print' '(' ListExpr ')' . ';'              (rule 29)

	';'            shift, and enter state 184


State 158

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 23)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 24)

	'{'            shift, and enter state 24

	Block          goto state 183

State 159

	Arg -> 'const' Type . Ident                         (rule 34)
	Type -> Type . '[]'                                 (rule 55)

	'[]'           shift, and enter state 65
	L_Ident        shift, and enter state 2

	Ident          goto state 182

State 160

	Arg -> Type Ident .                                 (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	':'            reduce using rule 33


State 161

	Stmt -> 'for' '(' Arg ':' . Expr ')' Block          (rule 26)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 181
	Expr8          goto state 41

State 162

	Stmt -> 'const' Type ListItem ';' .                 (rule 12)

	';'            reduce using rule 12
	'<<'           reduce using rule 12
	'bool'         reduce using rule 12
	'break'        reduce using rule 12
	'const'        reduce using rule 12
	'continue'     reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'none'         reduce using rule 12
	'print'        reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'tuple'        reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	%eof           reduce using rule 12


State 163

	ListType -> Type ',' ListType .                     (rule 58)

	'>>'           reduce using rule 58


State 164

	Item -> Ident '=' Expr .                            (rule 39)

	','            reduce using rule 39
	';'            reduce using rule 39


State 165

	ListArg -> Arg .                                    (rule 36)
	ListArg -> Arg . ',' ListArg                        (rule 37)

	')'            reduce using rule 36
	','            shift, and enter state 180


State 166

	Stmt -> Type Ident '(' ListArg . ')' Block          (rule 8)

	')'            shift, and enter state 179


State 167

	ListItem -> Item ',' ListItem .                     (rule 41)

	';'            reduce using rule 41


State 168

	Stmt -> Ident ListBracketE '=' Expr . ';'           (rule 13)

	';'            shift, and enter state 178


State 169

	Stmt -> Ident '%=' Expr ';' .                       (rule 20)

	';'            reduce using rule 20
	'<<'           reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'const'        reduce using rule 20
	'continue'     reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'none'         reduce using rule 20
	'print'        reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'tuple'        reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	%eof           reduce using rule 20


State 170

	Stmt -> Ident '(' ')' ';' .                         (rule 31)

	';'            reduce using rule 31
	'<<'           reduce using rule 31
	'bool'         reduce using rule 31
	'break'        reduce using rule 31
	'const'        reduce using rule 31
	'continue'     reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'none'         reduce using rule 31
	'print'        reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'tuple'        reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	%eof           reduce using rule 31


State 171

	Stmt -> Ident '(' ListExpr ')' . ';'                (rule 30)

	';'            shift, and enter state 177


State 172

	Stmt -> Ident '*=' Expr ';' .                       (rule 16)

	';'            reduce using rule 16
	'<<'           reduce using rule 16
	'bool'         reduce using rule 16
	'break'        reduce using rule 16
	'const'        reduce using rule 16
	'continue'     reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'none'         reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'tuple'        reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	%eof           reduce using rule 16


State 173

	Stmt -> Ident '+=' Expr ';' .                       (rule 18)

	';'            reduce using rule 18
	'<<'           reduce using rule 18
	'bool'         reduce using rule 18
	'break'        reduce using rule 18
	'const'        reduce using rule 18
	'continue'     reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'none'         reduce using rule 18
	'print'        reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'tuple'        reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	%eof           reduce using rule 18


State 174

	Stmt -> Ident '-=' Expr ';' .                       (rule 17)

	';'            reduce using rule 17
	'<<'           reduce using rule 17
	'bool'         reduce using rule 17
	'break'        reduce using rule 17
	'const'        reduce using rule 17
	'continue'     reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'none'         reduce using rule 17
	'print'        reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'tuple'        reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	%eof           reduce using rule 17


State 175

	Stmt -> Ident '//=' Expr ';' .                      (rule 19)

	';'            reduce using rule 19
	'<<'           reduce using rule 19
	'bool'         reduce using rule 19
	'break'        reduce using rule 19
	'const'        reduce using rule 19
	'continue'     reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'none'         reduce using rule 19
	'print'        reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'tuple'        reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	%eof           reduce using rule 19


State 176

	BracketE -> '[' Expr ']' .                          (rule 42)

	'='            reduce using rule 42
	'['            reduce using rule 42


State 177

	Stmt -> Ident '(' ListExpr ')' ';' .                (rule 30)

	';'            reduce using rule 30
	'<<'           reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'const'        reduce using rule 30
	'continue'     reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'none'         reduce using rule 30
	'print'        reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'tuple'        reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	%eof           reduce using rule 30


State 178

	Stmt -> Ident ListBracketE '=' Expr ';' .           (rule 13)

	';'            reduce using rule 13
	'<<'           reduce using rule 13
	'bool'         reduce using rule 13
	'break'        reduce using rule 13
	'const'        reduce using rule 13
	'continue'     reduce using rule 13
	'for'          reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'none'         reduce using rule 13
	'print'        reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'tuple'        reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	%eof           reduce using rule 13


State 179

	Stmt -> Type Ident '(' ListArg ')' . Block          (rule 8)

	'{'            shift, and enter state 24

	Block          goto state 203

State 180

	ListArg -> Arg ',' . ListArg                        (rule 37)

	')'            reduce using rule 35
	'<<'           shift, and enter state 10
	'bool'         shift, and enter state 11
	'const'        shift, and enter state 101
	'int'          shift, and enter state 17
	'none'         shift, and enter state 18
	'string'       shift, and enter state 21

	Arg            goto state 165
	ListArg        goto state 202
	Type           goto state 100

State 181

	Stmt -> 'for' '(' Arg ':' Expr . ')' Block          (rule 26)

	')'            shift, and enter state 201


State 182

	Arg -> 'const' Type Ident .                         (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	':'            reduce using rule 34


State 183

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 23)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 24)

	';'            reduce using rule 23
	'<<'           reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'const'        reduce using rule 23
	'continue'     reduce using rule 23
	'else'         shift, and enter state 200
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'none'         reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'tuple'        reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	%eof           reduce using rule 23


State 184

	Stmt -> 'print' '(' ListExpr ')' ';' .              (rule 29)

	';'            reduce using rule 29
	'<<'           reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'const'        reduce using rule 29
	'continue'     reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'none'         reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'tuple'        reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	%eof           reduce using rule 29


State 185

	ExprList -> 'new' '(' Type ',' . ListExpr ')'       (rule 72)

	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	'False'        shift, and enter state 45
	'None'         shift, and enter state 46
	'True'         shift, and enter state 47
	'['            shift, and enter state 48
	'len'          shift, and enter state 49
	'new'          shift, and enter state 50
	'not'          shift, and enter state 51
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 52
	L_quoted       shift, and enter state 53

	Ident          goto state 29
	Integer        goto state 30
	String         goto state 31
	Expr7          goto state 32
	ExprList       goto state 33
	Expr6          goto state 34
	Expr5          goto state 35
	Expr4          goto state 36
	Expr3          goto state 37
	Expr2          goto state 38
	Expr1          goto state 39
	Expr           goto state 85
	Expr8          goto state 41
	ListExpr       goto state 199

State 186

	Expr7 -> 'len' '(' Expr ')' .                       (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'..'           reduce using rule 59
	'//'           reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<<'           reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'and'          reduce using rule 59
	'bool'         reduce using rule 59
	'break'        reduce using rule 59
	'const'        reduce using rule 59
	'continue'     reduce using rule 59
	'for'          reduce using rule 59
	'if'           reduce using rule 59
	'int'          reduce using rule 59
	'none'         reduce using rule 59
	'or'           reduce using rule 59
	'print'        reduce using rule 59
	'return'       reduce using rule 59
	'string'       reduce using rule 59
	'tuple'        reduce using rule 59
	'while'        reduce using rule 59
	'{'            reduce using rule 59
	'}'            reduce using rule 59
	L_Ident        reduce using rule 59
	%eof           reduce using rule 59


State 187

	ExprList -> '[' Expr '..' Expr . ']'                (rule 74)

	']'            shift, and enter state 198


State 188

	ListExpr -> Expr ',' ListExpr .                     (rule 92)

	')'            reduce using rule 92
	']'            reduce using rule 92


State 189

	Expr7 -> '(' Expr ',' ListExpr . ')'                (rule 65)

	')'            shift, and enter state 197


State 190

	Expr7 -> Expr7 '[' Expr ']' .                       (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'..'           reduce using rule 62
	'//'           reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<<'           reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'and'          reduce using rule 62
	'bool'         reduce using rule 62
	'break'        reduce using rule 62
	'const'        reduce using rule 62
	'continue'     reduce using rule 62
	'for'          reduce using rule 62
	'if'           reduce using rule 62
	'int'          reduce using rule 62
	'none'         reduce using rule 62
	'or'           reduce using rule 62
	'print'        reduce using rule 62
	'return'       reduce using rule 62
	'string'       reduce using rule 62
	'tuple'        reduce using rule 62
	'while'        reduce using rule 62
	'{'            reduce using rule 62
	'}'            reduce using rule 62
	L_Ident        reduce using rule 62
	%eof           reduce using rule 62


State 191

	Expr7 -> Ident '(' ListExpr ')' .                   (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'..'           reduce using rule 63
	'//'           reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<<'           reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	'and'          reduce using rule 63
	'bool'         reduce using rule 63
	'break'        reduce using rule 63
	'const'        reduce using rule 63
	'continue'     reduce using rule 63
	'for'          reduce using rule 63
	'if'           reduce using rule 63
	'int'          reduce using rule 63
	'none'         reduce using rule 63
	'or'           reduce using rule 63
	'print'        reduce using rule 63
	'return'       reduce using rule 63
	'string'       reduce using rule 63
	'tuple'        reduce using rule 63
	'while'        reduce using rule 63
	'{'            reduce using rule 63
	'}'            reduce using rule 63
	L_Ident        reduce using rule 63
	%eof           reduce using rule 63


State 192

	ListTupleItem -> TupleItem .                        (rule 49)
	ListTupleItem -> TupleItem . ',' ListTupleItem      (rule 50)

	')'            reduce using rule 49
	','            shift, and enter state 196


State 193

	TupleIdent -> '(' TupleItem ',' ListTupleItem . ')'    (rule 48)

	')'            shift, and enter state 195


State 194

	Stmt -> 'while' '(' Expr ')' Block .                (rule 25)

	';'            reduce using rule 25
	'<<'           reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'const'        reduce using rule 25
	'continue'     reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'none'         reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'tuple'        reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	%eof           reduce using rule 25


State 195

	TupleIdent -> '(' TupleItem ',' ListTupleItem ')' .    (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	'='            reduce using rule 48


State 196

	ListTupleItem -> TupleItem ',' . ListTupleItem      (rule 50)

	'('            shift, and enter state 28
	'_'            shift, and enter state 134
	L_Ident        shift, and enter state 2

	Ident          goto state 131
	TupleItem      goto state 192
	TupleIdent     goto state 133
	ListTupleItem  goto state 207

State 197

	Expr7 -> '(' Expr ',' ListExpr ')' .                (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'..'           reduce using rule 65
	'//'           reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<<'           reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	'and'          reduce using rule 65
	'bool'         reduce using rule 65
	'break'        reduce using rule 65
	'const'        reduce using rule 65
	'continue'     reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'int'          reduce using rule 65
	'none'         reduce using rule 65
	'or'           reduce using rule 65
	'print'        reduce using rule 65
	'return'       reduce using rule 65
	'string'       reduce using rule 65
	'tuple'        reduce using rule 65
	'while'        reduce using rule 65
	'{'            reduce using rule 65
	'}'            reduce using rule 65
	L_Ident        reduce using rule 65
	%eof           reduce using rule 65


State 198

	ExprList -> '[' Expr '..' Expr ']' .                (rule 74)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'..'           reduce using rule 74
	'//'           reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<<'           reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'['            reduce using rule 74
	']'            reduce using rule 74
	'and'          reduce using rule 74
	'bool'         reduce using rule 74
	'break'        reduce using rule 74
	'const'        reduce using rule 74
	'continue'     reduce using rule 74
	'for'          reduce using rule 74
	'if'           reduce using rule 74
	'int'          reduce using rule 74
	'none'         reduce using rule 74
	'or'           reduce using rule 74
	'print'        reduce using rule 74
	'return'       reduce using rule 74
	'string'       reduce using rule 74
	'tuple'        reduce using rule 74
	'while'        reduce using rule 74
	'{'            reduce using rule 74
	'}'            reduce using rule 74
	L_Ident        reduce using rule 74
	%eof           reduce using rule 74


State 199

	ExprList -> 'new' '(' Type ',' ListExpr . ')'       (rule 72)

	')'            shift, and enter state 206


State 200

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 24)

	'{'            shift, and enter state 24

	Block          goto state 205

State 201

	Stmt -> 'for' '(' Arg ':' Expr ')' . Block          (rule 26)

	'{'            shift, and enter state 24

	Block          goto state 204

State 202

	ListArg -> Arg ',' ListArg .                        (rule 37)

	')'            reduce using rule 37


State 203

	Stmt -> Type Ident '(' ListArg ')' Block .          (rule 8)

	';'            reduce using rule 8
	'<<'           reduce using rule 8
	'bool'         reduce using rule 8
	'break'        reduce using rule 8
	'const'        reduce using rule 8
	'continue'     reduce using rule 8
	'for'          reduce using rule 8
	'if'           reduce using rule 8
	'int'          reduce using rule 8
	'none'         reduce using rule 8
	'print'        reduce using rule 8
	'return'       reduce using rule 8
	'string'       reduce using rule 8
	'tuple'        reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	%eof           reduce using rule 8


State 204

	Stmt -> 'for' '(' Arg ':' Expr ')' Block .          (rule 26)

	';'            reduce using rule 26
	'<<'           reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'const'        reduce using rule 26
	'continue'     reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'none'         reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'tuple'        reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	%eof           reduce using rule 26


State 205

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 24)

	';'            reduce using rule 24
	'<<'           reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'const'        reduce using rule 24
	'continue'     reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'none'         reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'tuple'        reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	%eof           reduce using rule 24


State 206

	ExprList -> 'new' '(' Type ',' ListExpr ')' .       (rule 72)

	'!='           reduce using rule 72
	'%'            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'..'           reduce using rule 72
	'//'           reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<<'           reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'['            reduce using rule 72
	']'            reduce using rule 72
	'and'          reduce using rule 72
	'bool'         reduce using rule 72
	'break'        reduce using rule 72
	'const'        reduce using rule 72
	'continue'     reduce using rule 72
	'for'          reduce using rule 72
	'if'           reduce using rule 72
	'int'          reduce using rule 72
	'none'         reduce using rule 72
	'or'           reduce using rule 72
	'print'        reduce using rule 72
	'return'       reduce using rule 72
	'string'       reduce using rule 72
	'tuple'        reduce using rule 72
	'while'        reduce using rule 72
	'{'            reduce using rule 72
	'}'            reduce using rule 72
	L_Ident        reduce using rule 72
	%eof           reduce using rule 72


State 207

	ListTupleItem -> TupleItem ',' ListTupleItem .      (rule 50)

	')'            reduce using rule 50


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 104
Number of terminals: 58
Number of non-terminals: 34
Number of states: 208
